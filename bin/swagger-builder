#!/usr/bin/env node

'use strict';

const cmd = require('commander'),
    path = require('path');

const pkg = require('../package.json');

cmd.version(pkg.version);

cmd
    .command('build <file> [out]')
    .description('Dereferences all external $ref pointers, and generated a single Swagger file')
    .action((file, out) => {

        let filepath = path.join(process.cwd(), file);

        require('../lib').build(filepath)
            .then((yamlDoc) => {

                out = out || 'swagger.yaml';

                let fs = require('fs'),
                    outputPath = path.join(process.cwd(), out),
                    dirname = path.dirname(outputPath);

                if (!fs.statSync(dirname).isDirectory()) {
                    fs.mkdirSync(dirname);
                }

                fs.writeFile(outputPath, yamlDoc, (err) => {
                    if (err) console.error(err);

                    console.log('\nSucceed');
                });


            }).catch((err) => console.error(err));

    });

cmd.command('validate <file>')
    .description('Validate Swagger file')
    .action((file) => {

        let fs = require('fs'),
            YAML = require('js-yaml'),
            filepath = path.join(process.cwd(), file);

        fs.readFile(filepath, {
            encoding: 'utf8'
        }, (err, data) => {
            require('../lib').validate(YAML.safeLoad(data));
        });
    });

cmd.command('*', null, {
        noHelp: true
    }) // null is required to avoid the implicit 'help' command being added
    .action(function(str) {
        // Using log instead of error since commander.js uses console.log for help output
        console.log(`swagger-builder does not support the ${str} command.`);

        cmd.outputHelp();
    });

cmd.parse(process.argv);
